// Bun Snapshot v1, https://bun.sh/docs/test/snapshots

exports[`MarkdownDI - Core Integration Tests Basic Processing processes simple blueprint references with shorthand syntax 1`] = `
"---
name: "test-document"
description: "A test document"
blueprints:
  sections:
    intro: "sections/intro.md"
---

# My Document

# Introduction

This is the introduction section with some content.
"
`;

exports[`MarkdownDI - Core Integration Tests Basic Processing processes simple blueprint references with shorthand syntax 2`] = `[]`;

exports[`MarkdownDI - Core Integration Tests Basic Processing processes blueprint references with explicit syntax 1`] = `
"---
name: "explicit-syntax-doc"
description: "Document using explicit blueprint syntax"
blueprints:
  sections:
    conclusion: "sections/conclusion.md"
    intro: "sections/intro.md"
---

# My Document

{{blueprints.sections.intro}}

## Middle Section

Some content here.

{{blueprints.sections.conclusion}}
"
`;

exports[`MarkdownDI - Core Integration Tests Basic Processing processes blueprint references with explicit syntax 2`] = `
[
  {
    "location": "line 10, column 0",
    "message": "Could not find reference "{{sections.conclusion}" to replace",
    "type": "reference",
  },
  {
    "location": "line 4, column 0",
    "message": "Could not find reference "{{sections.intro}" to replace",
    "type": "reference",
  },
]
`;

exports[`MarkdownDI - Core Integration Tests Basic Processing processes multiple blueprint references 1`] = `
"---
name: "multi-section-doc"
description: "Document with multiple sections"
blueprints:
  sections:
    conclusion: "sections/conclusion.md"
    intro: "sections/intro.md"
---

# Complete Document

# Introduction

This is the introduction section with some content.

## Middle Section

Some content in the middle.

# Conclusion

This wraps up the document nicely.
"
`;

exports[`MarkdownDI - Core Integration Tests Basic Processing processes multiple blueprint references 2`] = `[]`;

exports[`MarkdownDI - Core Integration Tests Basic Processing processes reference groups with wildcards 1`] = `
"---
name: "guide-collection"
description: "Collection of all guides"
references:
  guides:
    - guides/*.md
---

# All Guides

{{references.guides}}
"
`;

exports[`MarkdownDI - Core Integration Tests Basic Processing processes mixed blueprint and reference dependencies 1`] = `
"---
name: "mixed-document"
description: "Document with both blueprints and references"
blueprints:
  sections:
    intro: "sections/intro.md"
references:
  guides:
    - guides/getting-started.md
    - guides/advanced.md
---

# Mixed Content Document

# Introduction

This is the introduction section with some content.

## Related Guides

## Getting Started Guide

Step 1: Install the package
Step 2: Configure it
Step 3: Use it

## Advanced Usage

This covers advanced topics and patterns.
"
`;

exports[`MarkdownDI - Core Integration Tests Validation validates and catches missing frontmatter fields 1`] = `
[
  {
    "location": "frontmatter",
    "message": "Required field "description" is missing or invalid",
    "type": "frontmatter",
  },
  {
    "location": "line 4, column 0",
    "message": "Reference "{{sections.intro}}" is not declared in frontmatter",
    "type": "reference",
  },
  {
    "location": "content",
    "message": "Injected variable 'sections.intro' is not defined in frontmatter",
    "type": "injection",
  },
]
`;

exports[`MarkdownDI - Core Integration Tests Validation validates and catches undefined references 1`] = `
[
  {
    "location": "line 5, column 0",
    "message": "Reference "{{sections.undefined}}" is not declared in frontmatter",
    "type": "reference",
  },
  {
    "location": "line 6, column 0",
    "message": "Reference "{{something.random}}" is not declared in frontmatter",
    "type": "reference",
  },
  {
    "location": "content",
    "message": "Injected variable 'sections.undefined' is not defined in frontmatter",
    "type": "injection",
  },
  {
    "location": "content",
    "message": "Injected variable 'something.random' is not defined in frontmatter",
    "type": "injection",
  },
]
`;

exports[`MarkdownDI - Core Integration Tests Validation validates reference syntax 1`] = `
[
  {
    "location": "line 5, column 0",
    "message": "Invalid characters in reference: "invalid{nested"",
    "type": "syntax",
  },
  {
    "location": "line 6, column 0",
    "message": "Invalid reference format: "too.many.levels.here.really" (expected: {{group.key}} or {{section.group.key}})",
    "type": "syntax",
  },
  {
    "location": "line 5, column 0",
    "message": "Reference "{{invalid{nested}}" is not declared in frontmatter",
    "type": "reference",
  },
  {
    "location": "line 6, column 0",
    "message": "Reference "{{too.many.levels.here.really}}" is not declared in frontmatter",
    "type": "reference",
  },
  {
    "location": "content",
    "message": "Injected variable 'invalid{nested' is not defined in frontmatter",
    "type": "injection",
  },
  {
    "location": "content",
    "message": "Injected variable 'too.many.levels.here.really' is not defined in frontmatter",
    "type": "injection",
  },
]
`;

exports[`MarkdownDI - Core Integration Tests Validation validates blueprint structure 1`] = `
[
  {
    "location": "blueprints.0",
    "message": "Blueprint group "0" must be an object",
    "type": "frontmatter",
  },
  {
    "location": "blueprints.0.0",
    "message": "Blueprint file not found: t",
    "type": "file",
  },
  {
    "location": "blueprints.0.1",
    "message": "Blueprint file not found: h",
    "type": "file",
  },
  {
    "location": "blueprints.0.2",
    "message": "Blueprint file not found: i",
    "type": "file",
  },
  {
    "location": "blueprints.0.3",
    "message": "Blueprint file not found: s",
    "type": "file",
  },
  {
    "location": "blueprints.0.4",
    "message": "Blueprint file not found: -",
    "type": "file",
  },
  {
    "location": "blueprints.0.5",
    "message": "Blueprint file not found: s",
    "type": "file",
  },
  {
    "location": "blueprints.0.6",
    "message": "Blueprint file not found: h",
    "type": "file",
  },
  {
    "location": "blueprints.0.7",
    "message": "Blueprint file not found: o",
    "type": "file",
  },
  {
    "location": "blueprints.0.8",
    "message": "Blueprint file not found: u",
    "type": "file",
  },
  {
    "location": "blueprints.0.9",
    "message": "Blueprint file not found: l",
    "type": "file",
  },
  {
    "location": "blueprints.0.10",
    "message": "Blueprint file not found: d",
    "type": "file",
  },
  {
    "location": "blueprints.0.11",
    "message": "Blueprint file not found: -",
    "type": "file",
  },
  {
    "location": "blueprints.0.12",
    "message": "Blueprint file not found: b",
    "type": "file",
  },
  {
    "location": "blueprints.0.13",
    "message": "Blueprint file not found: e",
    "type": "file",
  },
  {
    "location": "blueprints.0.14",
    "message": "Blueprint file not found: -",
    "type": "file",
  },
  {
    "location": "blueprints.0.15",
    "message": "Blueprint file not found: a",
    "type": "file",
  },
  {
    "location": "blueprints.0.16",
    "message": "Blueprint file not found: n",
    "type": "file",
  },
  {
    "location": "blueprints.0.17",
    "message": "Blueprint file not found: -",
    "type": "file",
  },
  {
    "location": "blueprints.0.18",
    "message": "Blueprint file not found: o",
    "type": "file",
  },
  {
    "location": "blueprints.0.19",
    "message": "Blueprint file not found: b",
    "type": "file",
  },
  {
    "location": "blueprints.0.20",
    "message": "Blueprint file not found: j",
    "type": "file",
  },
  {
    "location": "blueprints.0.21",
    "message": "Blueprint file not found: e",
    "type": "file",
  },
  {
    "location": "blueprints.0.22",
    "message": "Blueprint file not found: c",
    "type": "file",
  },
  {
    "location": "blueprints.0.23",
    "message": "Blueprint file not found: t",
    "type": "file",
  },
]
`;

exports[`MarkdownDI - Core Integration Tests Schema Validation validates with Zod schema from options 1`] = `[]`;

exports[`MarkdownDI - Core Integration Tests Schema Validation catches schema validation errors 1`] = `
[
  {
    "location": "version",
    "message": "Expected string, received undefined",
    "type": "schema",
  },
  {
    "location": "count",
    "message": "Expected number, received undefined",
    "type": "schema",
  },
]
`;

exports[`MarkdownDI - Core Integration Tests Schema Validation registers and uses named schemas 1`] = `
[
  {
    "location": "publishDate",
    "message": "Expected string, received date",
    "type": "schema",
  },
  {
    "location": "publishDate",
    "message": "Schema validation failed: Expected string, received date",
    "type": "schema",
  },
]
`;

exports[`MarkdownDI - Core Integration Tests Schema Validation catches errors for unregistered schema references 1`] = `
[
  {
    "location": "schema",
    "message": "Referenced schema 'nonexistent-schema' is not registered",
    "type": "schema",
  },
]
`;

exports[`MarkdownDI - Core Integration Tests Dependency Resolution resolves dependencies from frontmatter 1`] = `
[
  "/Users/ps/Documents/GitHub/markdown-di/packages/test-fixtures/sections/intro.md",
  "/Users/ps/Documents/GitHub/markdown-di/packages/test-fixtures/sections/conclusion.md",
  "/Users/ps/Documents/GitHub/markdown-di/packages/test-fixtures/guides/advanced.md",
  "/Users/ps/Documents/GitHub/markdown-di/packages/test-fixtures/guides/getting-started.md",
]
`;

exports[`MarkdownDI - Core Integration Tests Dependency Resolution includes all resolved files in dependencies 1`] = `
[
  "/Users/ps/Documents/GitHub/markdown-di/packages/test-fixtures/sections/intro.md",
  "/Users/ps/Documents/GitHub/markdown-di/packages/test-fixtures/sections/conclusion.md",
  "/Users/ps/Documents/GitHub/markdown-di/packages/test-fixtures/guides/getting-started.md",
  "/Users/ps/Documents/GitHub/markdown-di/packages/test-fixtures/guides/advanced.md",
]
`;

exports[`MarkdownDI - Core Integration Tests Error Handling handles missing files gracefully 1`] = `
[
  {
    "location": "blueprints.sections.missing",
    "message": "Blueprint file not found: sections/does-not-exist.md",
    "type": "file",
  },
  {
    "location": "line 4, column 0",
    "message": "Failed to process reference: Error: Failed to read blueprint file /Users/ps/Documents/GitHub/markdown-di/packages/test-fixtures/sections/does-not-exist.md: Error: ENOENT: no such file or directory, open '/Users/ps/Documents/GitHub/markdown-di/packages/test-fixtures/sections/does-not-exist.md'",
    "type": "file",
  },
]
`;

exports[`MarkdownDI - Core Integration Tests Error Handling handles malformed frontmatter 1`] = `
[
  {
    "location": "document start",
    "message": 
"Failed to extract frontmatter: YAMLException: incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 2, column 19:
    this is not: valid: yaml: at: all
                      ^"
,
    "type": "frontmatter",
  },
  {
    "location": "frontmatter",
    "message": "Required field "name" is missing or invalid",
    "type": "frontmatter",
  },
  {
    "location": "frontmatter",
    "message": "Required field "description" is missing or invalid",
    "type": "frontmatter",
  },
]
`;

exports[`MarkdownDI - Core Integration Tests Error Handling handles empty frontmatter 1`] = `
[
  {
    "location": "document start",
    "message": "No frontmatter found in document",
    "type": "frontmatter",
  },
  {
    "location": "frontmatter",
    "message": "Required field "name" is missing or invalid",
    "type": "frontmatter",
  },
  {
    "location": "frontmatter",
    "message": "Required field "description" is missing or invalid",
    "type": "frontmatter",
  },
  {
    "location": "line 6, column 0",
    "message": "Reference "{{sections.intro}}" is not declared in frontmatter",
    "type": "reference",
  },
  {
    "location": "content",
    "message": "Injected variable 'sections.intro' is not defined in frontmatter",
    "type": "injection",
  },
]
`;

exports[`MarkdownDI - Core Integration Tests Complex Scenarios processes document with all features combined 1`] = `
"---
name: "complete-example"
description: "Complete example with all features"
blueprints:
  sections:
    conclusion: "sections/conclusion.md"
    intro: "sections/intro.md"
references:
  guides:
    - guides/getting-started.md
    - guides/advanced.md
---

# Complete Documentation

## Introduction

# Introduction

This is the introduction section with some content.

## Main Content

This is custom content written directly in the document.

### Examples and Guides

Here are some related guides:

## Getting Started Guide

Step 1: Install the package
Step 2: Configure it
Step 3: Use it

## Advanced Usage

This covers advanced topics and patterns.

## Conclusion

# Conclusion

This wraps up the document nicely.
"
`;

exports[`MarkdownDI - Core Integration Tests Complex Scenarios processes document with all features combined 2`] = `[]`;

exports[`MarkdownDI - Core Integration Tests Complex Scenarios processes document with all features combined 3`] = `
[
  "/Users/ps/Documents/GitHub/markdown-di/packages/test-fixtures/sections/intro.md",
  "/Users/ps/Documents/GitHub/markdown-di/packages/test-fixtures/sections/conclusion.md",
  "/Users/ps/Documents/GitHub/markdown-di/packages/test-fixtures/guides/getting-started.md",
  "/Users/ps/Documents/GitHub/markdown-di/packages/test-fixtures/guides/advanced.md",
]
`;

exports[`MarkdownDI - Core Integration Tests Complex Scenarios processes document with all features combined 4`] = `
{
  "blueprints": {
    "sections": {
      "conclusion": "sections/conclusion.md",
      "intro": "sections/intro.md",
    },
  },
  "description": "Complete example with all features",
  "name": "complete-example",
  "references": {
    "guides": [
      "guides/getting-started.md",
      "guides/advanced.md",
    ],
  },
}
`;

exports[`MarkdownDI - Core Integration Tests Complex Scenarios preserves formatting and whitespace 1`] = `
"---
name: "formatting-test"
description: "Test formatting preservation"
blueprints:
  sections:
    intro: "sections/intro.md"
---

# Document

First paragraph.

# Introduction

This is the introduction section with some content.

   Indented content here.

- List item 1
- List item 2
"
`;
